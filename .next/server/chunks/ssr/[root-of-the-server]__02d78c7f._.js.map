{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://D%3A/notes-making-software/frontend/src/app/calendar/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { JSX, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nconst daysInMonth = (month: number, year: number) =>\r\n  new Date(year, month + 1, 0).getDate();\r\n\r\nexport default function CalendarPage() {\r\n  const [userId] = useState(\"user123\");\r\n  const [notes, setNotes] = useState<any[]>([]);\r\n  const [selectedDate, setSelectedDate] = useState<string | null>(null);\r\n  const [selectedNoteId, setSelectedNoteId] = useState<number | null>(null);\r\n\r\n  const today = new Date();\r\n  const [month, setMonth] = useState(today.getMonth());\r\n  const [year, setYear] = useState(today.getFullYear());\r\n\r\n  const fetchNotes = async () => {\r\n    const res = await axios.get(`http://localhost:8000/notes/${userId}`);\r\n    setNotes(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const handleSchedule = async () => {\r\n    if (!selectedDate || selectedNoteId === null) return;\r\n    await axios.put(`http://localhost:8000/notes/${selectedNoteId}`, {\r\n      scheduled_date: selectedDate,\r\n    });\r\n    fetchNotes();\r\n    setSelectedDate(null);\r\n    setSelectedNoteId(null);\r\n  };\r\n\r\n  const getScheduledNotes = (dateStr: string) =>\r\n    notes.filter((note) => note.scheduled_date === dateStr);\r\n\r\n  const renderCalendar = () => {\r\n    const days: JSX.Element[] = [];\r\n    const firstDay = new Date(year, month, 1).getDay();\r\n    const totalDays = daysInMonth(month, year);\r\n\r\n    for (let i = 0; i < firstDay; i++) {\r\n      days.push(<div key={`empty-${i}`} className=\"p-2\" />);\r\n    }\r\n\r\n    for (let d = 1; d <= totalDays; d++) {\r\n      const dateStr = `${year}-${String(month + 1).padStart(2, \"0\")}-${String(\r\n        d\r\n      ).padStart(2, \"0\")}`;\r\n\r\n      const scheduled = getScheduledNotes(dateStr);\r\n\r\n      days.push(\r\n        <div\r\n          key={d}\r\n          onClick={() => setSelectedDate(dateStr)}\r\n          className={`p-2 border border-gray-700 rounded cursor-pointer hover:bg-purple-700 ${\r\n            scheduled.length ? \"bg-purple-600 text-white\" : \"bg-gray-900\"\r\n          }`}\r\n        >\r\n          <div className=\"text-sm\">{d}</div>\r\n          {scheduled.length > 0 && (\r\n            <div className=\"text-xs mt-1\">\r\n              {scheduled.map((n) => (\r\n                <p key={n.id} className=\"truncate text-purple-200\">\r\n                  {n.note.slice(0, 20)}...\r\n                </p>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  return (\r\n    <main className=\"min-h-screen bg-background text-foreground p-6 md:p-10\">\r\n      <h1 className=\"text-4xl font-bold mb-6 text-center\">üìÖ Schedule Content</h1>\r\n\r\n      <div className=\"flex justify-between items-center mb-4 max-w-xl mx-auto\">\r\n        <button onClick={() => setMonth((prev) => (prev === 0 ? 11 : prev - 1))}>\r\n          ‚óÄÔ∏è\r\n        </button>\r\n        <h2 className=\"text-xl font-semibold\">\r\n          {new Date(year, month).toLocaleString(\"default\", { month: \"long\" })} {year}\r\n        </h2>\r\n        <button onClick={() => setMonth((prev) => (prev === 11 ? 0 : prev + 1))}>\r\n          ‚ñ∂Ô∏è\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-7 gap-2 mb-10 max-w-5xl mx-auto\">\r\n        {renderCalendar()}\r\n      </div>\r\n\r\n      {selectedDate && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n          <div className=\"bg-gray-900 p-6 rounded shadow-lg w-[90%] max-w-md text-white\">\r\n            <h3 className=\"text-xl mb-4 font-semibold\">\r\n              Schedule Note for {selectedDate}\r\n            </h3>\r\n\r\n            <select\r\n              className=\"w-full p-2 mb-4 bg-gray-800 text-white rounded\"\r\n              onChange={(e) => setSelectedNoteId(Number(e.target.value))}\r\n              value={selectedNoteId ?? \"\"}\r\n            >\r\n              <option value=\"\">Select a note</option>\r\n              {notes.map((n) => (\r\n                <option key={n.id} value={n.id}>\r\n                  {n.note.slice(0, 50)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <div className=\"flex justify-end gap-2\">\r\n              <button\r\n                onClick={() => {\r\n                  setSelectedDate(null);\r\n                  setSelectedNoteId(null);\r\n                }}\r\n                className=\"px-4 py-2 bg-gray-600 rounded\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleSchedule}\r\n                className=\"px-4 py-2 bg-purple-600 hover:bg-purple-700 rounded\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"p-4\">This is the Notes page.</div>;\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}